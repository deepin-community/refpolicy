From 4c0897f3747a6a0d2f3ec3d9d01888c052258e3a Mon Sep 17 00:00:00 2001
From: zhouzilong <zhouzilong@uniontech.com>
Date: Thu, 5 Dec 2024 21:00:44 +0800
Subject: [PATCH] initialize usids of usec policy

---
 Makefile                                      |  12 ++
 config/appconfig-usec/dbus_contexts           |   6 +
 config/appconfig-usec/default_contexts        |  16 +++
 config/appconfig-usec/default_type            |   6 +
 config/appconfig-usec/failsafe_context        |   1 +
 .../appconfig-usec/guest_u_default_contexts   |   6 +
 config/appconfig-usec/initrc_context          |   1 +
 config/appconfig-usec/lxc_contexts            |   5 +
 config/appconfig-usec/media                   |   3 +
 config/appconfig-usec/openrc_contexts         |   1 +
 config/appconfig-usec/removable_context       |   1 +
 config/appconfig-usec/root_default_contexts   |  12 ++
 config/appconfig-usec/securetty_types         |   1 +
 config/appconfig-usec/sepgsql_contexts        |  40 +++++++
 config/appconfig-usec/seusers                 |   2 +
 .../appconfig-usec/staff_u_default_contexts   |  10 ++
 .../unconfined_u_default_contexts             |  10 ++
 config/appconfig-usec/user_u_default_contexts |   8 ++
 config/appconfig-usec/userhelper_context      |   1 +
 config/appconfig-usec/virtual_domain_context  |   1 +
 config/appconfig-usec/virtual_image_context   |   2 +
 config/appconfig-usec/x_contexts              | 105 ++++++++++++++++++
 config/appconfig-usec/xdm_default_contexts    |   2 +
 .../appconfig-usec/xguest_u_default_contexts  |   7 ++
 policy/flask/initial_usids                    |  37 ++++++
 policy/modules/kernel/domain.te               |   5 +
 policy/modules/kernel/filesystem.te           |   5 +
 .../modules/services/deepin_perm_control.te   |  57 ++++++----
 support/Makefile.devel                        |   7 ++
 29 files changed, 347 insertions(+), 23 deletions(-)
 create mode 100644 config/appconfig-usec/dbus_contexts
 create mode 100644 config/appconfig-usec/default_contexts
 create mode 100644 config/appconfig-usec/default_type
 create mode 100644 config/appconfig-usec/failsafe_context
 create mode 100644 config/appconfig-usec/guest_u_default_contexts
 create mode 100644 config/appconfig-usec/initrc_context
 create mode 100644 config/appconfig-usec/lxc_contexts
 create mode 100644 config/appconfig-usec/media
 create mode 100644 config/appconfig-usec/openrc_contexts
 create mode 100644 config/appconfig-usec/removable_context
 create mode 100644 config/appconfig-usec/root_default_contexts
 create mode 100644 config/appconfig-usec/securetty_types
 create mode 100644 config/appconfig-usec/sepgsql_contexts
 create mode 100644 config/appconfig-usec/seusers
 create mode 100644 config/appconfig-usec/staff_u_default_contexts
 create mode 100644 config/appconfig-usec/unconfined_u_default_contexts
 create mode 100644 config/appconfig-usec/user_u_default_contexts
 create mode 100644 config/appconfig-usec/userhelper_context
 create mode 100644 config/appconfig-usec/virtual_domain_context
 create mode 100644 config/appconfig-usec/virtual_image_context
 create mode 100644 config/appconfig-usec/x_contexts
 create mode 100644 config/appconfig-usec/xdm_default_contexts
 create mode 100644 config/appconfig-usec/xguest_u_default_contexts
 create mode 100644 policy/flask/initial_usids

diff --git a/Makefile b/Makefile
index cd0573d..da93f8a 100644
--- a/Makefile
+++ b/Makefile
@@ -94,7 +94,11 @@ poldir := policy
 moddir := $(poldir)/modules
 flaskdir := $(poldir)/flask
 secclass := $(flaskdir)/security_classes
+ifeq "$(TYPE)" "usec"
+isids := $(flaskdir)/initial_usids
+else
 isids := $(flaskdir)/initial_sids
+endif
 avs := $(flaskdir)/access_vectors
 
 # local source layout
@@ -200,6 +204,14 @@ ifeq "$(TYPE)" "mcs"
 	gennetfilter += -c
 endif
 
+# enable USEC if requested.
+ifeq "$(TYPE)" "usec"
+	M4PARAM += -D enable_mcs=true -D enable_usec=true
+	override CHECKPOLICY += -M
+	override CHECKMODULE += -M
+	gennetfilter += -c
+endif
+
 # enable distribution-specific policy
 ifneq ($(DISTRO),)
 	M4PARAM += -D distro_$(DISTRO)=true
diff --git a/config/appconfig-usec/dbus_contexts b/config/appconfig-usec/dbus_contexts
new file mode 100644
index 0000000..116e684
--- /dev/null
+++ b/config/appconfig-usec/dbus_contexts
@@ -0,0 +1,6 @@
+<!DOCTYPE busconfig PUBLIC "-//freedesktop//DTD D-BUS Bus Configuration 1.0//EN"
+ "http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd">
+<busconfig>
+  <selinux>
+  </selinux>
+</busconfig>
diff --git a/config/appconfig-usec/default_contexts b/config/appconfig-usec/default_contexts
new file mode 100644
index 0000000..166a74f
--- /dev/null
+++ b/config/appconfig-usec/default_contexts
@@ -0,0 +1,16 @@
+system_r:crond_t:s0		user_r:user_t:s0 staff_r:staff_t:s0 sysadm_r:sysadm_t:s0 unconfined_r:unconfined_t:s0 user_r:cronjob_t:s0 staff_r:cronjob_t:s0 sysadm_r:cronjob_t:s0 system_r:system_cronjob_t:s0 unconfined_r:unconfined_cronjob_t:s0
+system_r:init_t:s0		user_r:user_systemd_t:s0 staff_r:staff_systemd_t:s0 sysadm_r:sysadm_systemd_t:s0 unconfined_r:unconfined_t:s0
+system_r:local_login_t:s0	user_r:user_t:s0 staff_r:staff_t:s0 sysadm_r:sysadm_t:s0 unconfined_r:unconfined_t:s0
+system_r:remote_login_t:s0	user_r:user_t:s0 staff_r:staff_t:s0 unconfined_r:unconfined_t:s0
+system_r:sshd_t:s0		user_r:user_t:s0 sysadm_r:sysadm_t:s0 staff_r:staff_t:s0 unconfined_r:unconfined_t:s0
+system_r:sulogin_t:s0		sysadm_r:sysadm_t:s0
+system_r:xdm_t:s0		user_r:user_t:s0 staff_r:staff_t:s0 sysadm_r:sysadm_t:s0 unconfined_r:unconfined_t:s0
+
+staff_r:staff_su_t:s0		user_r:user_t:s0 staff_r:staff_t:s0 sysadm_r:sysadm_t:s0
+staff_r:staff_sudo_t:s0		sysadm_r:sysadm_t:s0 staff_r:staff_t:s0
+
+sysadm_r:sysadm_su_t:s0		user_r:user_t:s0 staff_r:staff_t:s0 sysadm_r:sysadm_t:s0
+sysadm_r:sysadm_sudo_t:s0	sysadm_r:sysadm_t:s0
+
+user_r:user_su_t:s0		user_r:user_t:s0 staff_r:staff_t:s0 sysadm_r:sysadm_t:s0
+user_r:user_sudo_t:s0		sysadm_r:sysadm_t:s0 user_r:user_t:s0
diff --git a/config/appconfig-usec/default_type b/config/appconfig-usec/default_type
new file mode 100644
index 0000000..33528d6
--- /dev/null
+++ b/config/appconfig-usec/default_type
@@ -0,0 +1,6 @@
+auditadm_r:auditadm_t
+secadm_r:secadm_t
+sysadm_r:sysadm_t
+staff_r:staff_t
+unconfined_r:unconfined_t
+user_r:user_t
diff --git a/config/appconfig-usec/failsafe_context b/config/appconfig-usec/failsafe_context
new file mode 100644
index 0000000..999abd9
--- /dev/null
+++ b/config/appconfig-usec/failsafe_context
@@ -0,0 +1 @@
+sysadm_r:sysadm_t:s0
diff --git a/config/appconfig-usec/guest_u_default_contexts b/config/appconfig-usec/guest_u_default_contexts
new file mode 100644
index 0000000..90e5262
--- /dev/null
+++ b/config/appconfig-usec/guest_u_default_contexts
@@ -0,0 +1,6 @@
+guest_r:guest_t:s0		guest_r:guest_t:s0
+system_r:crond_t:s0		guest_r:guest_t:s0
+system_r:initrc_su_t:s0		guest_r:guest_t:s0
+system_r:local_login_t:s0	guest_r:guest_t:s0
+system_r:remote_login_t:s0	guest_r:guest_t:s0
+system_r:sshd_t:s0		guest_r:guest_t:s0
diff --git a/config/appconfig-usec/initrc_context b/config/appconfig-usec/initrc_context
new file mode 100644
index 0000000..30ab971
--- /dev/null
+++ b/config/appconfig-usec/initrc_context
@@ -0,0 +1 @@
+system_u:system_r:initrc_t:s0
diff --git a/config/appconfig-usec/lxc_contexts b/config/appconfig-usec/lxc_contexts
new file mode 100644
index 0000000..de397ed
--- /dev/null
+++ b/config/appconfig-usec/lxc_contexts
@@ -0,0 +1,5 @@
+process = "system_u:system_r:container_t:s0"
+content = "system_u:object_r:virt_var_lib_t:s0"
+file = "system_u:object_r:container_file_t:s0"
+ro_file = "system_u:object_r:container_ro_file_t:s0"
+sandbox_lxc_process = "system_u:system_r:container_t:s0"
diff --git a/config/appconfig-usec/media b/config/appconfig-usec/media
new file mode 100644
index 0000000..81f3463
--- /dev/null
+++ b/config/appconfig-usec/media
@@ -0,0 +1,3 @@
+cdrom system_u:object_r:removable_device_t:s0
+floppy system_u:object_r:removable_device_t:s0
+disk system_u:object_r:fixed_disk_device_t:s0
diff --git a/config/appconfig-usec/openrc_contexts b/config/appconfig-usec/openrc_contexts
new file mode 100644
index 0000000..72f1894
--- /dev/null
+++ b/config/appconfig-usec/openrc_contexts
@@ -0,0 +1 @@
+run_init=run_init_t
diff --git a/config/appconfig-usec/removable_context b/config/appconfig-usec/removable_context
new file mode 100644
index 0000000..7fcc56e
--- /dev/null
+++ b/config/appconfig-usec/removable_context
@@ -0,0 +1 @@
+system_u:object_r:removable_t:s0
diff --git a/config/appconfig-usec/root_default_contexts b/config/appconfig-usec/root_default_contexts
new file mode 100644
index 0000000..498b429
--- /dev/null
+++ b/config/appconfig-usec/root_default_contexts
@@ -0,0 +1,12 @@
+system_r:crond_t:s0		unconfined_r:unconfined_t:s0 sysadm_r:cronjob_t:s0 staff_r:cronjob_t:s0 user_r:cronjob_t:s0
+system_r:init_t:s0		unconfined_r:unconfined_t:s0 sysadm_r:sysadm_systemd_t:s0 staff_r:staff_systemd_t:s0 user_r:user_systemd_t:s0
+system_r:local_login_t:s0	unconfined_r:unconfined_t:s0 sysadm_r:sysadm_t:s0 staff_r:staff_t:s0 user_r:user_t:s0
+
+staff_r:staff_su_t:s0		unconfined_r:unconfined_t:s0 sysadm_r:sysadm_t:s0 staff_r:staff_t:s0 user_r:user_t:s0
+sysadm_r:sysadm_su_t:s0		unconfined_r:unconfined_t:s0 sysadm_r:sysadm_t:s0 staff_r:staff_t:s0 user_r:user_t:s0
+user_r:user_su_t:s0		unconfined_r:unconfined_t:s0 sysadm_r:sysadm_t:s0 staff_r:staff_t:s0 user_r:user_t:s0
+
+#
+# Uncomment if you want to automatically login as sysadm_r
+#
+#system_r:sshd_t:s0		unconfined_r:unconfined_t:s0 sysadm_r:sysadm_t:s0 staff_r:staff_t:s0 user_r:user_t:s0
diff --git a/config/appconfig-usec/securetty_types b/config/appconfig-usec/securetty_types
new file mode 100644
index 0000000..527d835
--- /dev/null
+++ b/config/appconfig-usec/securetty_types
@@ -0,0 +1 @@
+user_tty_device_t
diff --git a/config/appconfig-usec/sepgsql_contexts b/config/appconfig-usec/sepgsql_contexts
new file mode 100644
index 0000000..f8e9b1c
--- /dev/null
+++ b/config/appconfig-usec/sepgsql_contexts
@@ -0,0 +1,40 @@
+#
+# Initial security label for SE-PostgreSQL (MCS)
+#
+
+# <databases>
+db_database	*			system_u:object_r:sepgsql_db_t:s0
+
+# <schemas>
+db_schema	*.*			system_u:object_r:sepgsql_schema_t:s0
+
+# <tables>
+db_table	*.pg_catalog.*		system_u:object_r:sepgsql_sysobj_t:s0
+db_table	*.*.*			system_u:object_r:sepgsql_table_t:s0
+
+# <column>
+db_column	*.pg_catalog.*.*	system_u:object_r:sepgsql_sysobj_t:s0
+db_column	*.*.*.*			system_u:object_r:sepgsql_table_t:s0
+
+# <sequences>
+db_sequence	*.*.*			system_u:object_r:sepgsql_seq_t:s0
+
+# <views>
+db_view		*.*.*			system_u:object_r:sepgsql_view_t:s0
+
+# <procedures>
+db_procedure	*.*.*			system_u:object_r:sepgsql_proc_exec_t:s0
+
+# <tuples>
+db_tuple	*.pg_catalog.*		system_u:object_r:sepgsql_sysobj_t:s0
+db_tuple	*.*.*			system_u:object_r:sepgsql_table_t:s0
+
+# <blobs>
+db_blob		*.*			system_u:object_r:sepgsql_blob_t:s0
+
+# <language>
+db_language	*.sql			system_u:object_r:sepgsql_safe_lang_t:s0
+db_language	*.plpgsql		system_u:object_r:sepgsql_safe_lang_t:s0
+db_language	*.pltcl			system_u:object_r:sepgsql_safe_lang_t:s0
+db_language	*.plperl		system_u:object_r:sepgsql_safe_lang_t:s0
+db_language	*.*			system_u:object_r:sepgsql_lang_t:s0
diff --git a/config/appconfig-usec/seusers b/config/appconfig-usec/seusers
new file mode 100644
index 0000000..5fbab95
--- /dev/null
+++ b/config/appconfig-usec/seusers
@@ -0,0 +1,2 @@
+root:unconfined_u:s0-mcs_systemhigh
+__default__:unconfined_u:s0-mcs_systemhigh
diff --git a/config/appconfig-usec/staff_u_default_contexts b/config/appconfig-usec/staff_u_default_contexts
new file mode 100644
index 0000000..15d6a95
--- /dev/null
+++ b/config/appconfig-usec/staff_u_default_contexts
@@ -0,0 +1,10 @@
+system_r:init_t:s0		staff_r:staff_systemd_t:s0 sysadm_r:sysadm_systemd_t:s0
+system_r:local_login_t:s0	staff_r:staff_t:s0 sysadm_r:sysadm_t:s0
+system_r:remote_login_t:s0	staff_r:staff_t:s0
+system_r:sshd_t:s0		staff_r:staff_t:s0 sysadm_r:sysadm_t:s0
+system_r:crond_t:s0		staff_r:staff_t:s0 staff_r:cronjob_t:s0
+system_r:xdm_t:s0		staff_r:staff_t:s0
+staff_r:staff_su_t:s0		staff_r:staff_t:s0
+staff_r:staff_sudo_t:s0		staff_r:staff_t:s0
+sysadm_r:sysadm_su_t:s0		sysadm_r:sysadm_t:s0
+sysadm_r:sysadm_sudo_t:s0	sysadm_r:sysadm_t:s0
diff --git a/config/appconfig-usec/unconfined_u_default_contexts b/config/appconfig-usec/unconfined_u_default_contexts
new file mode 100644
index 0000000..96c5e13
--- /dev/null
+++ b/config/appconfig-usec/unconfined_u_default_contexts
@@ -0,0 +1,10 @@
+system_r:crond_t:s0		unconfined_r:unconfined_t:s0 unconfined_r:unconfined_cronjob_t:s0
+system_r:init_t:s0		unconfined_r:unconfined_t:s0
+system_r:initrc_t:s0		unconfined_r:unconfined_t:s0
+system_r:local_login_t:s0	unconfined_r:unconfined_t:s0
+system_r:remote_login_t:s0	unconfined_r:unconfined_t:s0
+system_r:rshd_t:s0		unconfined_r:unconfined_t:s0
+system_r:sshd_t:s0		unconfined_r:unconfined_t:s0
+system_r:sysadm_su_t:s0		unconfined_r:unconfined_t:s0
+system_r:unconfined_t:s0	unconfined_r:unconfined_t:s0
+system_r:xdm_t:s0		unconfined_r:unconfined_t:s0
diff --git a/config/appconfig-usec/user_u_default_contexts b/config/appconfig-usec/user_u_default_contexts
new file mode 100644
index 0000000..975222b
--- /dev/null
+++ b/config/appconfig-usec/user_u_default_contexts
@@ -0,0 +1,8 @@
+system_r:init_t:s0		user_r:user_systemd_t:s0
+system_r:local_login_t:s0	user_r:user_t:s0
+system_r:remote_login_t:s0	user_r:user_t:s0
+system_r:sshd_t:s0		user_r:user_t:s0
+system_r:crond_t:s0		user_r:user_t:s0 user_r:cronjob_t:s0
+system_r:xdm_t:s0		user_r:user_t:s0
+user_r:user_su_t:s0		user_r:user_t:s0
+user_r:user_sudo_t:s0		user_r:user_t:s0
diff --git a/config/appconfig-usec/userhelper_context b/config/appconfig-usec/userhelper_context
new file mode 100644
index 0000000..dc37a69
--- /dev/null
+++ b/config/appconfig-usec/userhelper_context
@@ -0,0 +1 @@
+system_u:sysadm_r:sysadm_t:s0
diff --git a/config/appconfig-usec/virtual_domain_context b/config/appconfig-usec/virtual_domain_context
new file mode 100644
index 0000000..d387b42
--- /dev/null
+++ b/config/appconfig-usec/virtual_domain_context
@@ -0,0 +1 @@
+system_u:system_r:svirt_t:s0
diff --git a/config/appconfig-usec/virtual_image_context b/config/appconfig-usec/virtual_image_context
new file mode 100644
index 0000000..8ab1e27
--- /dev/null
+++ b/config/appconfig-usec/virtual_image_context
@@ -0,0 +1,2 @@
+system_u:object_r:svirt_image_t:s0
+system_u:object_r:virt_content_t:s0
diff --git a/config/appconfig-usec/x_contexts b/config/appconfig-usec/x_contexts
new file mode 100644
index 0000000..0b32044
--- /dev/null
+++ b/config/appconfig-usec/x_contexts
@@ -0,0 +1,105 @@
+#
+# Config file for XSELinux extension
+#
+
+
+#
+##
+### Rules for X Clients
+##
+#
+
+#
+# The default client rule defines a context to be used for all clients
+# connecting to the server from a remote host.
+#
+client	*				system_u:object_r:remote_t:s0
+
+
+#
+##
+### Rules for X Properties
+##
+#
+
+#
+# Property rules map a property name to a context.  A default property
+# rule indicated by an asterisk should follow all other property rules.
+#
+# Properties that normal clients may only read
+property _SELINUX_*			system_u:object_r:seclabel_xproperty_t:s0
+
+# Clipboard and selection properties
+property CUT_BUFFER?			system_u:object_r:clipboard_xproperty_t:s0
+
+# Default fallback type
+property *	   			system_u:object_r:xproperty_t:s0
+
+
+#
+##
+### Rules for X Extensions
+##
+#
+
+#
+# Extension rules map an extension name to a context.  A default extension
+# rule indicated by an asterisk should follow all other extension rules.
+#
+# Restricted extensions
+extension SELinux			system_u:object_r:security_xextension_t:s0
+
+# Standard extensions
+extension *	   			system_u:object_r:xextension_t:s0
+
+
+#
+##
+### Rules for X Selections
+##
+#
+
+# Selection rules map a selection name to a context.  A default selection
+# rule indicated by an asterisk should follow all other selection rules.
+#
+# Standard selections
+selection PRIMARY			system_u:object_r:clipboard_xselection_t:s0
+selection CLIPBOARD			system_u:object_r:clipboard_xselection_t:s0
+
+# Default fallback type
+selection *				system_u:object_r:xselection_t:s0
+
+
+#
+##
+### Rules for X Events
+##
+#
+
+#
+# Event rules map an event protocol name to a context.  A default event
+# rule indicated by an asterisk should follow all other event rules.
+#
+# Input events
+event X11:KeyPress			system_u:object_r:input_xevent_t:s0
+event X11:KeyRelease			system_u:object_r:input_xevent_t:s0
+event X11:ButtonPress			system_u:object_r:input_xevent_t:s0
+event X11:ButtonRelease			system_u:object_r:input_xevent_t:s0
+event X11:MotionNotify			system_u:object_r:input_xevent_t:s0
+event XInputExtension:DeviceKeyPress	system_u:object_r:input_xevent_t:s0
+event XInputExtension:DeviceKeyRelease	system_u:object_r:input_xevent_t:s0
+event XInputExtension:DeviceButtonPress	system_u:object_r:input_xevent_t:s0
+event XInputExtension:DeviceButtonRelease	system_u:object_r:input_xevent_t:s0
+event XInputExtension:DeviceMotionNotify	system_u:object_r:input_xevent_t:s0
+event XInputExtension:DeviceValuator	system_u:object_r:input_xevent_t:s0
+event XInputExtension:ProximityIn	system_u:object_r:input_xevent_t:s0
+event XInputExtension:ProximityOut	system_u:object_r:input_xevent_t:s0
+
+# Client message events
+event X11:ClientMessage			system_u:object_r:client_xevent_t:s0
+event X11:SelectionNotify		system_u:object_r:client_xevent_t:s0
+event X11:UnmapNotify			system_u:object_r:client_xevent_t:s0
+event X11:ConfigureNotify		system_u:object_r:client_xevent_t:s0
+
+# Default fallback type
+event *					system_u:object_r:xevent_t:s0
diff --git a/config/appconfig-usec/xdm_default_contexts b/config/appconfig-usec/xdm_default_contexts
new file mode 100644
index 0000000..d35bb24
--- /dev/null
+++ b/config/appconfig-usec/xdm_default_contexts
@@ -0,0 +1,2 @@
+system_r:xdm_t:s0		xdm_r:xdm_t:s0
+system_r:init_t:s0		xdm_r:xdm_t:s0
diff --git a/config/appconfig-usec/xguest_u_default_contexts b/config/appconfig-usec/xguest_u_default_contexts
new file mode 100644
index 0000000..574363b
--- /dev/null
+++ b/config/appconfig-usec/xguest_u_default_contexts
@@ -0,0 +1,7 @@
+system_r:crond_t:s0		xguest_r:xguest_t:s0
+system_r:initrc_su_t:s0		xguest_r:xguest_t:s0
+system_r:local_login_t:s0	xguest_r:xguest_t:s0
+system_r:remote_login_t:s0	xguest_r:xguest_t:s0
+system_r:sshd_t:s0		xguest_r:xguest_t:s0
+system_r:xdm_t:s0		xguest_r:xguest_t:s0
+xguest_r:xguest_t:s0		xguest_r:xguest_t:s0
diff --git a/policy/flask/initial_usids b/policy/flask/initial_usids
new file mode 100644
index 0000000..3ccbaa7
--- /dev/null
+++ b/policy/flask/initial_usids
@@ -0,0 +1,37 @@
+# FLASK
+
+#
+# Define initial security identifiers
+#
+
+sid kernel
+sid security
+sid unlabeled
+sid fs
+sid file
+sid file_labels
+sid init
+sid any_socket
+sid port
+sid netif
+sid netmsg
+sid node
+sid igmp_packet
+sid icmp_socket
+sid tcp_socket
+sid sysctl_modprobe
+sid sysctl
+sid sysctl_fs
+sid sysctl_kernel
+sid sysctl_net
+sid sysctl_net_unix
+sid sysctl_vm
+sid sysctl_dev
+sid kmod
+sid policy
+sid scmp_packet
+sid usec_immutable_fs
+sid deepin_usec
+sid devnull
+
+# FLASK
diff --git a/policy/modules/kernel/domain.te b/policy/modules/kernel/domain.te
index 0211767..d58d243 100644
--- a/policy/modules/kernel/domain.te
+++ b/policy/modules/kernel/domain.te
@@ -13,6 +13,11 @@ policy_module(domain)
 ## </desc>
 gen_tunable(mmap_low_allowed, false)
 
+ifdef(`enable_usec',`
+       type deepin_usec_t;
+	   sid deepin_usec gen_context(system_u:object_r:deepin_usec_t,s0)
+')
+
 # Mark process types as domains
 attribute domain;
 
diff --git a/policy/modules/kernel/filesystem.te b/policy/modules/kernel/filesystem.te
index 0384086..05da4b1 100644
--- a/policy/modules/kernel/filesystem.te
+++ b/policy/modules/kernel/filesystem.te
@@ -21,6 +21,11 @@ type fs_t;
 fs_xattr_type(fs_t)
 sid fs gen_context(system_u:object_r:fs_t,s0)
 
+ifdef(`enable_usec',`
+	type usec_immutable_fs_t;
+	sid usec_immutable_fs gen_context(system_u:object_r:usec_immutable_fs_t,s0)
+')
+
 # Use xattrs for the following filesystem types.
 # Requires that a security xattr handler exist for the filesystem.
 fs_use_xattr btrfs gen_context(system_u:object_r:fs_t,s0);
diff --git a/policy/modules/services/deepin_perm_control.te b/policy/modules/services/deepin_perm_control.te
index 29447fe..332b02a 100644
--- a/policy/modules/services/deepin_perm_control.te
+++ b/policy/modules/services/deepin_perm_control.te
@@ -141,9 +141,6 @@ require {
 	type deepin_elf_verify_t;
 }
 
-# This is default usec label
-type deepin_usec_t;
-deepin_app_domain_set(deepin_usec_t)
 deepin_app_domain_set(kernel_t)
 
 # for app to read selinux config
@@ -246,25 +243,35 @@ type deepin_perm_manager_test_exec_t;
 domain_entry_file(sysadm_t, deepin_perm_manager_test_exec_t)
 domtrans_pattern(deepin_perm_manager_t, deepin_perm_manager_test_exec_t, sysadm_t)
 
-tunable_policy(`open_deepin_gdb',`
-	allow deepin_usec_t deepin_app_domain:process { ptrace signal sigkill sigstop };
-')
-
-tunable_policy(`open_usec_developer_mode',`
-	allow deepin_usec_t security_t:dir list_dir_perms;
-	allow deepin_usec_t security_t:file rw_file_perms;
-
-	allow deepin_usec_t security_t:security setbool;
-
-	allow deepin_usec_t security_t:security setenforce;
+ifdef(`enable_usec',`
+	# This is default usec label
+	require {
+		type deepin_usec_t;
+	}
+	deepin_app_domain_set(deepin_usec_t)
+	tunable_policy(`open_deepin_gdb',`
+		allow deepin_usec_t deepin_app_domain:process { ptrace signal sigkill sigstop };
+	')
+
+	tunable_policy(`open_usec_developer_mode',`
+		allow deepin_usec_t security_t:dir list_dir_perms;
+		allow deepin_usec_t security_t:file rw_file_perms;
+
+		allow deepin_usec_t security_t:security setbool;
+
+		allow deepin_usec_t security_t:security setenforce;
+	')
+
+	tunable_policy(`can_gdb_security_service',`
+		allow deepin_usec_t deepin_security_server_domain:process { ptrace signal sigkill sigstop };
+		allow deepin_usec_t deepin_perm_manager_unit_t:service *;
+	')
 ')
 
 # 注意, 这里由deepin_perm_manager_unit_t 保证服务不被stop就能防止通过systemctl stop来杀安全服务了
 allow initrc_t deepin_security_server_domain:process { signal sigkill sigstop };
 
 tunable_policy(`can_gdb_security_service',`
-	allow deepin_usec_t deepin_security_server_domain:process { ptrace signal sigkill sigstop };
-	allow deepin_usec_t deepin_perm_manager_unit_t:service *;
 	allow sysadm_t deepin_perm_manager_unit_t:service *;
 	allow sysadm_sudo_t deepin_perm_manager_unit_t:service *;
 	deepin_perm_manager_domtrans(sysadm_t)
@@ -860,10 +867,14 @@ allow deepin_home_sec_t self:filesystem associate;
 allow deepin_executable_file_type deepin_home_sec_t:file ~{ relabelfrom relabelto };
 allow deepin_executable_file_type deepin_home_sec_t:dir list_dir_perms;
 
-# umount管控
-require {       
-    class filesystem unmount;     
-}
-type deepin_immutable_t, deepin_security_server_domain; 
-deepin_app_domain_set(deepin_immutable_t);
-allow deepin_immutable_t deepin_ro_file_t:filesystem { unmount };
\ No newline at end of file
+
+ifdef(`enable_usec',`
+	# umount管控
+	require {
+		class filesystem unmount;
+		type usec_immutable_fs_t;
+	}
+	type deepin_immutable_t, deepin_security_server_domain;
+	deepin_app_domain_set(deepin_immutable_t);
+	allow deepin_immutable_t usec_immutable_fs_t:filesystem { unmount };
+')
diff --git a/support/Makefile.devel b/support/Makefile.devel
index 416c9e0..f804f9e 100644
--- a/support/Makefile.devel
+++ b/support/Makefile.devel
@@ -53,6 +53,13 @@ ifeq "$(TYPE)" "mcs"
 	CHECKMODULE += -M
 endif
 
+# enable MLS if MCS requested.
+ifeq "$(TYPE)" "usec"
+	M4PARAM += -D enable_usec -D enable_mcs
+	CHECKPOLICY += -M
+	CHECKMODULE += -M
+endif
+
 # enable distribution-specific policy
 ifneq ($(DISTRO),)
 	M4PARAM += -D distro_$(DISTRO)
-- 
2.20.1

